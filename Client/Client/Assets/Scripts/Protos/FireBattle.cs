// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=null.  DO NOT EDIT!
#pragma warning disable
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.zyd.common.proto.client {
  
  public static partial class FireBattle {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static FireBattle() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class MatchFairBattleRequest : pb::GeneratedMessageLite<MatchFairBattleRequest, MatchFairBattleRequest.Builder> {
    private MatchFairBattleRequest() { }
    private static readonly MatchFairBattleRequest defaultInstance = new MatchFairBattleRequest().MakeReadOnly();
    private static readonly string[] _matchFairBattleRequestFieldNames = new string[] {  };
    private static readonly uint[] _matchFairBattleRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MatchFairBattleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchFairBattleRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _matchFairBattleRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MatchFairBattleRequest other = obj as MatchFairBattleRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchFairBattleRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MatchFairBattleRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MatchFairBattleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchFairBattleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchFairBattleRequest result;
      
      private MatchFairBattleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchFairBattleRequest original = result;
          result = new MatchFairBattleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchFairBattleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MatchFairBattleRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.MatchFairBattleRequest.DefaultInstance; }
      }
      
      public override MatchFairBattleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MatchFairBattleRequest) {
          return MergeFrom((MatchFairBattleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchFairBattleRequest other) {
        if (other == global::com.zyd.common.proto.client.MatchFairBattleRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchFairBattleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchFairBattleRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static MatchFairBattleRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class MatchFairBattleResponse : pb::GeneratedMessageLite<MatchFairBattleResponse, MatchFairBattleResponse.Builder> {
    private MatchFairBattleResponse() { }
    private static readonly MatchFairBattleResponse defaultInstance = new MatchFairBattleResponse().MakeReadOnly();
    private static readonly string[] _matchFairBattleResponseFieldNames = new string[] {  };
    private static readonly uint[] _matchFairBattleResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MatchFairBattleResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchFairBattleResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _matchFairBattleResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MatchFairBattleResponse other = obj as MatchFairBattleResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchFairBattleResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchFairBattleResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MatchFairBattleResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MatchFairBattleResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchFairBattleResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchFairBattleResponse result;
      
      private MatchFairBattleResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchFairBattleResponse original = result;
          result = new MatchFairBattleResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchFairBattleResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MatchFairBattleResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.MatchFairBattleResponse.DefaultInstance; }
      }
      
      public override MatchFairBattleResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MatchFairBattleResponse) {
          return MergeFrom((MatchFairBattleResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchFairBattleResponse other) {
        if (other == global::com.zyd.common.proto.client.MatchFairBattleResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchFairBattleResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchFairBattleResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static MatchFairBattleResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class CancelMatchFairBattleRequest : pb::GeneratedMessageLite<CancelMatchFairBattleRequest, CancelMatchFairBattleRequest.Builder> {
    private CancelMatchFairBattleRequest() { }
    private static readonly CancelMatchFairBattleRequest defaultInstance = new CancelMatchFairBattleRequest().MakeReadOnly();
    private static readonly string[] _cancelMatchFairBattleRequestFieldNames = new string[] {  };
    private static readonly uint[] _cancelMatchFairBattleRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CancelMatchFairBattleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelMatchFairBattleRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelMatchFairBattleRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CancelMatchFairBattleRequest other = obj as CancelMatchFairBattleRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelMatchFairBattleRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CancelMatchFairBattleRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CancelMatchFairBattleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelMatchFairBattleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelMatchFairBattleRequest result;
      
      private CancelMatchFairBattleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelMatchFairBattleRequest original = result;
          result = new CancelMatchFairBattleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelMatchFairBattleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CancelMatchFairBattleRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.CancelMatchFairBattleRequest.DefaultInstance; }
      }
      
      public override CancelMatchFairBattleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CancelMatchFairBattleRequest) {
          return MergeFrom((CancelMatchFairBattleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelMatchFairBattleRequest other) {
        if (other == global::com.zyd.common.proto.client.CancelMatchFairBattleRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelMatchFairBattleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelMatchFairBattleRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static CancelMatchFairBattleRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class CancelMatchFairBattleResponse : pb::GeneratedMessageLite<CancelMatchFairBattleResponse, CancelMatchFairBattleResponse.Builder> {
    private CancelMatchFairBattleResponse() { }
    private static readonly CancelMatchFairBattleResponse defaultInstance = new CancelMatchFairBattleResponse().MakeReadOnly();
    private static readonly string[] _cancelMatchFairBattleResponseFieldNames = new string[] {  };
    private static readonly uint[] _cancelMatchFairBattleResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CancelMatchFairBattleResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelMatchFairBattleResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelMatchFairBattleResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CancelMatchFairBattleResponse other = obj as CancelMatchFairBattleResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchFairBattleResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelMatchFairBattleResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CancelMatchFairBattleResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CancelMatchFairBattleResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelMatchFairBattleResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelMatchFairBattleResponse result;
      
      private CancelMatchFairBattleResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelMatchFairBattleResponse original = result;
          result = new CancelMatchFairBattleResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelMatchFairBattleResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CancelMatchFairBattleResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.CancelMatchFairBattleResponse.DefaultInstance; }
      }
      
      public override CancelMatchFairBattleResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CancelMatchFairBattleResponse) {
          return MergeFrom((CancelMatchFairBattleResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelMatchFairBattleResponse other) {
        if (other == global::com.zyd.common.proto.client.CancelMatchFairBattleResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelMatchFairBattleResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelMatchFairBattleResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static CancelMatchFairBattleResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerBattleMesRequest : pb::GeneratedMessageLite<PlayerBattleMesRequest, PlayerBattleMesRequest.Builder> {
    private PlayerBattleMesRequest() { }
    private static readonly PlayerBattleMesRequest defaultInstance = new PlayerBattleMesRequest().MakeReadOnly();
    private static readonly string[] _playerBattleMesRequestFieldNames = new string[] { "battleMes" };
    private static readonly uint[] _playerBattleMesRequestFieldTags = new uint[] { 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerBattleMesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerBattleMesRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleMesFieldNumber = 2;
    private bool hasBattleMes;
    private global::com.zyd.common.proto.client.BattleMes battleMes_;
    public bool HasBattleMes {
      get { return hasBattleMes; }
    }
    public global::com.zyd.common.proto.client.BattleMes BattleMes {
      get { return battleMes_ ?? global::com.zyd.common.proto.client.BattleMes.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasBattleMes) return false;
        if (!BattleMes.IsInitialized) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerBattleMesRequestFieldNames;
      if (hasBattleMes) {
        output.WriteMessage(2, field_names[0], BattleMes);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBattleMes) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, BattleMes);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasBattleMes) hash ^= battleMes_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerBattleMesRequest other = obj as PlayerBattleMesRequest;
      if (other == null) return false;
      if (hasBattleMes != other.hasBattleMes || (hasBattleMes && !battleMes_.Equals(other.battleMes_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerBattleMesRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerBattleMesRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerBattleMesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerBattleMesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerBattleMesRequest result;
      
      private PlayerBattleMesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerBattleMesRequest original = result;
          result = new PlayerBattleMesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerBattleMesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerBattleMesRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerBattleMesRequest.DefaultInstance; }
      }
      
      public override PlayerBattleMesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerBattleMesRequest) {
          return MergeFrom((PlayerBattleMesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerBattleMesRequest other) {
        if (other == global::com.zyd.common.proto.client.PlayerBattleMesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBattleMes) {
          MergeBattleMes(other.BattleMes);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerBattleMesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerBattleMesRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::com.zyd.common.proto.client.BattleMes.Builder subBuilder = global::com.zyd.common.proto.client.BattleMes.CreateBuilder();
              if (result.hasBattleMes) {
                subBuilder.MergeFrom(BattleMes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BattleMes = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasBattleMes {
       get { return result.hasBattleMes; }
      }
      public global::com.zyd.common.proto.client.BattleMes BattleMes {
        get { return result.BattleMes; }
        set { SetBattleMes(value); }
      }
      public Builder SetBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleMes = true;
        result.battleMes_ = value;
        return this;
      }
      public Builder SetBattleMes(global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBattleMes = true;
        result.battleMes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBattleMes &&
            result.battleMes_ != global::com.zyd.common.proto.client.BattleMes.DefaultInstance) {
            result.battleMes_ = global::com.zyd.common.proto.client.BattleMes.CreateBuilder(result.battleMes_).MergeFrom(value).BuildPartial();
        } else {
          result.battleMes_ = value;
        }
        result.hasBattleMes = true;
        return this;
      }
      public Builder ClearBattleMes() {
        PrepareBuilder();
        result.hasBattleMes = false;
        result.battleMes_ = null;
        return this;
      }
    }
    static PlayerBattleMesRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerBattleMesResponse : pb::GeneratedMessageLite<PlayerBattleMesResponse, PlayerBattleMesResponse.Builder> {
    private PlayerBattleMesResponse() { }
    private static readonly PlayerBattleMesResponse defaultInstance = new PlayerBattleMesResponse().MakeReadOnly();
    private static readonly string[] _playerBattleMesResponseFieldNames = new string[] { "error", "res" };
    private static readonly uint[] _playerBattleMesResponseFieldTags = new uint[] { 18, 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerBattleMesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerBattleMesResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ResFieldNumber = 1;
    private bool hasRes;
    private bool res_;
    public bool HasRes {
      get { return hasRes; }
    }
    public bool Res {
      get { return res_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private string error_ = "";
    public bool HasError {
      get { return hasError; }
    }
    public string Error {
      get { return error_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasRes) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerBattleMesResponseFieldNames;
      if (hasRes) {
        output.WriteBool(1, field_names[1], Res);
      }
      if (hasError) {
        output.WriteString(2, field_names[0], Error);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRes) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Res);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Error);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasRes) hash ^= res_.GetHashCode();
      if (hasError) hash ^= error_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerBattleMesResponse other = obj as PlayerBattleMesResponse;
      if (other == null) return false;
      if (hasRes != other.hasRes || (hasRes && !res_.Equals(other.res_))) return false;
      if (hasError != other.hasError || (hasError && !error_.Equals(other.error_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerBattleMesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerBattleMesResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerBattleMesResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerBattleMesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerBattleMesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerBattleMesResponse result;
      
      private PlayerBattleMesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerBattleMesResponse original = result;
          result = new PlayerBattleMesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerBattleMesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerBattleMesResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerBattleMesResponse.DefaultInstance; }
      }
      
      public override PlayerBattleMesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerBattleMesResponse) {
          return MergeFrom((PlayerBattleMesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerBattleMesResponse other) {
        if (other == global::com.zyd.common.proto.client.PlayerBattleMesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRes) {
          Res = other.Res;
        }
        if (other.HasError) {
          Error = other.Error;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerBattleMesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerBattleMesResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRes = input.ReadBool(ref result.res_);
              break;
            }
            case 18: {
              result.hasError = input.ReadString(ref result.error_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasRes {
        get { return result.hasRes; }
      }
      public bool Res {
        get { return result.Res; }
        set { SetRes(value); }
      }
      public Builder SetRes(bool value) {
        PrepareBuilder();
        result.hasRes = true;
        result.res_ = value;
        return this;
      }
      public Builder ClearRes() {
        PrepareBuilder();
        result.hasRes = false;
        result.res_ = false;
        return this;
      }
      
      public bool HasError {
        get { return result.hasError; }
      }
      public string Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = "";
        return this;
      }
    }
    static PlayerBattleMesResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelEndRequest : pb::GeneratedMessageLite<FairBattleLevelEndRequest, FairBattleLevelEndRequest.Builder> {
    private FairBattleLevelEndRequest() { }
    private static readonly FairBattleLevelEndRequest defaultInstance = new FairBattleLevelEndRequest().MakeReadOnly();
    private static readonly string[] _fairBattleLevelEndRequestFieldNames = new string[] { "isGiveUp" };
    private static readonly uint[] _fairBattleLevelEndRequestFieldTags = new uint[] { 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelEndRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelEndRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IsGiveUpFieldNumber = 2;
    private bool hasIsGiveUp;
    private bool isGiveUp_;
    public bool HasIsGiveUp {
      get { return hasIsGiveUp; }
    }
    public bool IsGiveUp {
      get { return isGiveUp_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelEndRequestFieldNames;
      if (hasIsGiveUp) {
        output.WriteBool(2, field_names[0], IsGiveUp);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsGiveUp) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsGiveUp);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasIsGiveUp) hash ^= isGiveUp_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelEndRequest other = obj as FairBattleLevelEndRequest;
      if (other == null) return false;
      if (hasIsGiveUp != other.hasIsGiveUp || (hasIsGiveUp && !isGiveUp_.Equals(other.isGiveUp_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelEndRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelEndRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelEndRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelEndRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelEndRequest result;
      
      private FairBattleLevelEndRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelEndRequest original = result;
          result = new FairBattleLevelEndRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelEndRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelEndRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelEndRequest.DefaultInstance; }
      }
      
      public override FairBattleLevelEndRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelEndRequest) {
          return MergeFrom((FairBattleLevelEndRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelEndRequest other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelEndRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsGiveUp) {
          IsGiveUp = other.IsGiveUp;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelEndRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelEndRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasIsGiveUp = input.ReadBool(ref result.isGiveUp_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasIsGiveUp {
        get { return result.hasIsGiveUp; }
      }
      public bool IsGiveUp {
        get { return result.IsGiveUp; }
        set { SetIsGiveUp(value); }
      }
      public Builder SetIsGiveUp(bool value) {
        PrepareBuilder();
        result.hasIsGiveUp = true;
        result.isGiveUp_ = value;
        return this;
      }
      public Builder ClearIsGiveUp() {
        PrepareBuilder();
        result.hasIsGiveUp = false;
        result.isGiveUp_ = false;
        return this;
      }
    }
    static FairBattleLevelEndRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelEndResponse : pb::GeneratedMessageLite<FairBattleLevelEndResponse, FairBattleLevelEndResponse.Builder> {
    private FairBattleLevelEndResponse() { }
    private static readonly FairBattleLevelEndResponse defaultInstance = new FairBattleLevelEndResponse().MakeReadOnly();
    private static readonly string[] _fairBattleLevelEndResponseFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelEndResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelEndResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelEndResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelEndResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelEndResponse other = obj as FairBattleLevelEndResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelEndResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelEndResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelEndResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelEndResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelEndResponse result;
      
      private FairBattleLevelEndResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelEndResponse original = result;
          result = new FairBattleLevelEndResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelEndResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelEndResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelEndResponse.DefaultInstance; }
      }
      
      public override FairBattleLevelEndResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelEndResponse) {
          return MergeFrom((FairBattleLevelEndResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelEndResponse other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelEndResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelEndResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelEndResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelEndResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelReadyRequest : pb::GeneratedMessageLite<FairBattleLevelReadyRequest, FairBattleLevelReadyRequest.Builder> {
    private FairBattleLevelReadyRequest() { }
    private static readonly FairBattleLevelReadyRequest defaultInstance = new FairBattleLevelReadyRequest().MakeReadOnly();
    private static readonly string[] _fairBattleLevelReadyRequestFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelReadyRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelReadyRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelReadyRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelReadyRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelReadyRequest other = obj as FairBattleLevelReadyRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelReadyRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelReadyRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelReadyRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelReadyRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelReadyRequest result;
      
      private FairBattleLevelReadyRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelReadyRequest original = result;
          result = new FairBattleLevelReadyRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelReadyRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelReadyRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelReadyRequest.DefaultInstance; }
      }
      
      public override FairBattleLevelReadyRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelReadyRequest) {
          return MergeFrom((FairBattleLevelReadyRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelReadyRequest other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelReadyRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelReadyRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelReadyRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelReadyRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelReadyResponse : pb::GeneratedMessageLite<FairBattleLevelReadyResponse, FairBattleLevelReadyResponse.Builder> {
    private FairBattleLevelReadyResponse() { }
    private static readonly FairBattleLevelReadyResponse defaultInstance = new FairBattleLevelReadyResponse().MakeReadOnly();
    private static readonly string[] _fairBattleLevelReadyResponseFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelReadyResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelReadyResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelReadyResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelReadyResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelReadyResponse other = obj as FairBattleLevelReadyResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelReadyResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelReadyResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelReadyResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelReadyResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelReadyResponse result;
      
      private FairBattleLevelReadyResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelReadyResponse original = result;
          result = new FairBattleLevelReadyResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelReadyResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelReadyResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelReadyResponse.DefaultInstance; }
      }
      
      public override FairBattleLevelReadyResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelReadyResponse) {
          return MergeFrom((FairBattleLevelReadyResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelReadyResponse other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelReadyResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelReadyResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelReadyResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelReadyResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelFattingFinishedRequest : pb::GeneratedMessageLite<FairBattleLevelFattingFinishedRequest, FairBattleLevelFattingFinishedRequest.Builder> {
    private FairBattleLevelFattingFinishedRequest() { }
    private static readonly FairBattleLevelFattingFinishedRequest defaultInstance = new FairBattleLevelFattingFinishedRequest().MakeReadOnly();
    private static readonly string[] _fairBattleLevelFattingFinishedRequestFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelFattingFinishedRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelFattingFinishedRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelFattingFinishedRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelFattingFinishedRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelFattingFinishedRequest other = obj as FairBattleLevelFattingFinishedRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelFattingFinishedRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelFattingFinishedRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelFattingFinishedRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelFattingFinishedRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelFattingFinishedRequest result;
      
      private FairBattleLevelFattingFinishedRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelFattingFinishedRequest original = result;
          result = new FairBattleLevelFattingFinishedRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelFattingFinishedRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelFattingFinishedRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelFattingFinishedRequest.DefaultInstance; }
      }
      
      public override FairBattleLevelFattingFinishedRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelFattingFinishedRequest) {
          return MergeFrom((FairBattleLevelFattingFinishedRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelFattingFinishedRequest other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelFattingFinishedRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelFattingFinishedRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelFattingFinishedRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelFattingFinishedRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelFattingFinishedResponse : pb::GeneratedMessageLite<FairBattleLevelFattingFinishedResponse, FairBattleLevelFattingFinishedResponse.Builder> {
    private FairBattleLevelFattingFinishedResponse() { }
    private static readonly FairBattleLevelFattingFinishedResponse defaultInstance = new FairBattleLevelFattingFinishedResponse().MakeReadOnly();
    private static readonly string[] _fairBattleLevelFattingFinishedResponseFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelFattingFinishedResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelFattingFinishedResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelFattingFinishedResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelFattingFinishedResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelFattingFinishedResponse other = obj as FairBattleLevelFattingFinishedResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelFattingFinishedResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelFattingFinishedResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelFattingFinishedResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelFattingFinishedResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelFattingFinishedResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelFattingFinishedResponse result;
      
      private FairBattleLevelFattingFinishedResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelFattingFinishedResponse original = result;
          result = new FairBattleLevelFattingFinishedResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelFattingFinishedResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelFattingFinishedResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelFattingFinishedResponse.DefaultInstance; }
      }
      
      public override FairBattleLevelFattingFinishedResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelFattingFinishedResponse) {
          return MergeFrom((FairBattleLevelFattingFinishedResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelFattingFinishedResponse other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelFattingFinishedResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelFattingFinishedResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelFattingFinishedResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelFattingFinishedResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerRequireBattleMesAgainRequest : pb::GeneratedMessageLite<PlayerRequireBattleMesAgainRequest, PlayerRequireBattleMesAgainRequest.Builder> {
    private PlayerRequireBattleMesAgainRequest() { }
    private static readonly PlayerRequireBattleMesAgainRequest defaultInstance = new PlayerRequireBattleMesAgainRequest().MakeReadOnly();
    private static readonly string[] _playerRequireBattleMesAgainRequestFieldNames = new string[] { "roomId", "startPlayNum" };
    private static readonly uint[] _playerRequireBattleMesAgainRequestFieldTags = new uint[] { 16, 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerRequireBattleMesAgainRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerRequireBattleMesAgainRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int StartPlayNumFieldNumber = 1;
    private bool hasStartPlayNum;
    private int startPlayNum_;
    public bool HasStartPlayNum {
      get { return hasStartPlayNum; }
    }
    public int StartPlayNum {
      get { return startPlayNum_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RoomIdFieldNumber = 2;
    private bool hasRoomId;
    private long roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public long RoomId {
      get { return roomId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasStartPlayNum) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerRequireBattleMesAgainRequestFieldNames;
      if (hasStartPlayNum) {
        output.WriteInt32(1, field_names[1], StartPlayNum);
      }
      if (hasRoomId) {
        output.WriteInt64(2, field_names[0], RoomId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStartPlayNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, StartPlayNum);
        }
        if (hasRoomId) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, RoomId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasStartPlayNum) hash ^= startPlayNum_.GetHashCode();
      if (hasRoomId) hash ^= roomId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerRequireBattleMesAgainRequest other = obj as PlayerRequireBattleMesAgainRequest;
      if (other == null) return false;
      if (hasStartPlayNum != other.hasStartPlayNum || (hasStartPlayNum && !startPlayNum_.Equals(other.startPlayNum_))) return false;
      if (hasRoomId != other.hasRoomId || (hasRoomId && !roomId_.Equals(other.roomId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerRequireBattleMesAgainRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerRequireBattleMesAgainRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerRequireBattleMesAgainRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerRequireBattleMesAgainRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerRequireBattleMesAgainRequest result;
      
      private PlayerRequireBattleMesAgainRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerRequireBattleMesAgainRequest original = result;
          result = new PlayerRequireBattleMesAgainRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerRequireBattleMesAgainRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerRequireBattleMesAgainRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerRequireBattleMesAgainRequest.DefaultInstance; }
      }
      
      public override PlayerRequireBattleMesAgainRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerRequireBattleMesAgainRequest) {
          return MergeFrom((PlayerRequireBattleMesAgainRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerRequireBattleMesAgainRequest other) {
        if (other == global::com.zyd.common.proto.client.PlayerRequireBattleMesAgainRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStartPlayNum) {
          StartPlayNum = other.StartPlayNum;
        }
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerRequireBattleMesAgainRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerRequireBattleMesAgainRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStartPlayNum = input.ReadInt32(ref result.startPlayNum_);
              break;
            }
            case 16: {
              result.hasRoomId = input.ReadInt64(ref result.roomId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasStartPlayNum {
        get { return result.hasStartPlayNum; }
      }
      public int StartPlayNum {
        get { return result.StartPlayNum; }
        set { SetStartPlayNum(value); }
      }
      public Builder SetStartPlayNum(int value) {
        PrepareBuilder();
        result.hasStartPlayNum = true;
        result.startPlayNum_ = value;
        return this;
      }
      public Builder ClearStartPlayNum() {
        PrepareBuilder();
        result.hasStartPlayNum = false;
        result.startPlayNum_ = 0;
        return this;
      }
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public long RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(long value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0L;
        return this;
      }
    }
    static PlayerRequireBattleMesAgainRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerRequireBattleMesAgainResponse : pb::GeneratedMessageLite<PlayerRequireBattleMesAgainResponse, PlayerRequireBattleMesAgainResponse.Builder> {
    private PlayerRequireBattleMesAgainResponse() { }
    private static readonly PlayerRequireBattleMesAgainResponse defaultInstance = new PlayerRequireBattleMesAgainResponse().MakeReadOnly();
    private static readonly string[] _playerRequireBattleMesAgainResponseFieldNames = new string[] { "battleMes", "fairBattleLevelSatrt" };
    private static readonly uint[] _playerRequireBattleMesAgainResponseFieldTags = new uint[] { 18, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerRequireBattleMesAgainResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerRequireBattleMesAgainResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int FairBattleLevelSatrtFieldNumber = 1;
    private bool hasFairBattleLevelSatrt;
    private global::com.zyd.common.proto.client.FairBattleLevelStartPush fairBattleLevelSatrt_;
    public bool HasFairBattleLevelSatrt {
      get { return hasFairBattleLevelSatrt; }
    }
    public global::com.zyd.common.proto.client.FairBattleLevelStartPush FairBattleLevelSatrt {
      get { return fairBattleLevelSatrt_ ?? global::com.zyd.common.proto.client.FairBattleLevelStartPush.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleMesFieldNumber = 2;
    private pbc::PopsicleList<global::com.zyd.common.proto.client.BattleMes> battleMes_ = new pbc::PopsicleList<global::com.zyd.common.proto.client.BattleMes>();
    public scg::IList<global::com.zyd.common.proto.client.BattleMes> BattleMesList {
      get { return battleMes_; }
    }
    public int BattleMesCount {
      get { return battleMes_.Count; }
    }
    public global::com.zyd.common.proto.client.BattleMes GetBattleMes(int index) {
      return battleMes_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (HasFairBattleLevelSatrt) {
          if (!FairBattleLevelSatrt.IsInitialized) return false;
        }
        foreach (global::com.zyd.common.proto.client.BattleMes element in BattleMesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerRequireBattleMesAgainResponseFieldNames;
      if (hasFairBattleLevelSatrt) {
        output.WriteMessage(1, field_names[1], FairBattleLevelSatrt);
      }
      if (battleMes_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], battleMes_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFairBattleLevelSatrt) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, FairBattleLevelSatrt);
        }
        foreach (global::com.zyd.common.proto.client.BattleMes element in BattleMesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasFairBattleLevelSatrt) hash ^= fairBattleLevelSatrt_.GetHashCode();
      foreach(global::com.zyd.common.proto.client.BattleMes i in battleMes_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerRequireBattleMesAgainResponse other = obj as PlayerRequireBattleMesAgainResponse;
      if (other == null) return false;
      if (hasFairBattleLevelSatrt != other.hasFairBattleLevelSatrt || (hasFairBattleLevelSatrt && !fairBattleLevelSatrt_.Equals(other.fairBattleLevelSatrt_))) return false;
      if(battleMes_.Count != other.battleMes_.Count) return false;
      for(int ix=0; ix < battleMes_.Count; ix++)
        if(!battleMes_[ix].Equals(other.battleMes_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerRequireBattleMesAgainResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerRequireBattleMesAgainResponse MakeReadOnly() {
      battleMes_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerRequireBattleMesAgainResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerRequireBattleMesAgainResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerRequireBattleMesAgainResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerRequireBattleMesAgainResponse result;
      
      private PlayerRequireBattleMesAgainResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerRequireBattleMesAgainResponse original = result;
          result = new PlayerRequireBattleMesAgainResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerRequireBattleMesAgainResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerRequireBattleMesAgainResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerRequireBattleMesAgainResponse.DefaultInstance; }
      }
      
      public override PlayerRequireBattleMesAgainResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerRequireBattleMesAgainResponse) {
          return MergeFrom((PlayerRequireBattleMesAgainResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerRequireBattleMesAgainResponse other) {
        if (other == global::com.zyd.common.proto.client.PlayerRequireBattleMesAgainResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFairBattleLevelSatrt) {
          MergeFairBattleLevelSatrt(other.FairBattleLevelSatrt);
        }
        if (other.battleMes_.Count != 0) {
          result.battleMes_.Add(other.battleMes_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerRequireBattleMesAgainResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerRequireBattleMesAgainResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.zyd.common.proto.client.FairBattleLevelStartPush.Builder subBuilder = global::com.zyd.common.proto.client.FairBattleLevelStartPush.CreateBuilder();
              if (result.hasFairBattleLevelSatrt) {
                subBuilder.MergeFrom(FairBattleLevelSatrt);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FairBattleLevelSatrt = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.battleMes_, global::com.zyd.common.proto.client.BattleMes.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasFairBattleLevelSatrt {
       get { return result.hasFairBattleLevelSatrt; }
      }
      public global::com.zyd.common.proto.client.FairBattleLevelStartPush FairBattleLevelSatrt {
        get { return result.FairBattleLevelSatrt; }
        set { SetFairBattleLevelSatrt(value); }
      }
      public Builder SetFairBattleLevelSatrt(global::com.zyd.common.proto.client.FairBattleLevelStartPush value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFairBattleLevelSatrt = true;
        result.fairBattleLevelSatrt_ = value;
        return this;
      }
      public Builder SetFairBattleLevelSatrt(global::com.zyd.common.proto.client.FairBattleLevelStartPush.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFairBattleLevelSatrt = true;
        result.fairBattleLevelSatrt_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFairBattleLevelSatrt(global::com.zyd.common.proto.client.FairBattleLevelStartPush value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFairBattleLevelSatrt &&
            result.fairBattleLevelSatrt_ != global::com.zyd.common.proto.client.FairBattleLevelStartPush.DefaultInstance) {
            result.fairBattleLevelSatrt_ = global::com.zyd.common.proto.client.FairBattleLevelStartPush.CreateBuilder(result.fairBattleLevelSatrt_).MergeFrom(value).BuildPartial();
        } else {
          result.fairBattleLevelSatrt_ = value;
        }
        result.hasFairBattleLevelSatrt = true;
        return this;
      }
      public Builder ClearFairBattleLevelSatrt() {
        PrepareBuilder();
        result.hasFairBattleLevelSatrt = false;
        result.fairBattleLevelSatrt_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.zyd.common.proto.client.BattleMes> BattleMesList {
        get { return PrepareBuilder().battleMes_; }
      }
      public int BattleMesCount {
        get { return result.BattleMesCount; }
      }
      public global::com.zyd.common.proto.client.BattleMes GetBattleMes(int index) {
        return result.GetBattleMes(index);
      }
      public Builder SetBattleMes(int index, global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleMes_[index] = value;
        return this;
      }
      public Builder SetBattleMes(int index, global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleMes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleMes_.Add(value);
        return this;
      }
      public Builder AddBattleMes(global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleMes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBattleMes(scg::IEnumerable<global::com.zyd.common.proto.client.BattleMes> values) {
        PrepareBuilder();
        result.battleMes_.Add(values);
        return this;
      }
      public Builder ClearBattleMes() {
        PrepareBuilder();
        result.battleMes_.Clear();
        return this;
      }
    }
    static PlayerRequireBattleMesAgainResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class CheckPlayerFairBattleExistRequest : pb::GeneratedMessageLite<CheckPlayerFairBattleExistRequest, CheckPlayerFairBattleExistRequest.Builder> {
    private CheckPlayerFairBattleExistRequest() { }
    private static readonly CheckPlayerFairBattleExistRequest defaultInstance = new CheckPlayerFairBattleExistRequest().MakeReadOnly();
    private static readonly string[] _checkPlayerFairBattleExistRequestFieldNames = new string[] {  };
    private static readonly uint[] _checkPlayerFairBattleExistRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CheckPlayerFairBattleExistRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CheckPlayerFairBattleExistRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _checkPlayerFairBattleExistRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CheckPlayerFairBattleExistRequest other = obj as CheckPlayerFairBattleExistRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CheckPlayerFairBattleExistRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CheckPlayerFairBattleExistRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CheckPlayerFairBattleExistRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CheckPlayerFairBattleExistRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CheckPlayerFairBattleExistRequest result;
      
      private CheckPlayerFairBattleExistRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CheckPlayerFairBattleExistRequest original = result;
          result = new CheckPlayerFairBattleExistRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CheckPlayerFairBattleExistRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CheckPlayerFairBattleExistRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.CheckPlayerFairBattleExistRequest.DefaultInstance; }
      }
      
      public override CheckPlayerFairBattleExistRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CheckPlayerFairBattleExistRequest) {
          return MergeFrom((CheckPlayerFairBattleExistRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CheckPlayerFairBattleExistRequest other) {
        if (other == global::com.zyd.common.proto.client.CheckPlayerFairBattleExistRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_checkPlayerFairBattleExistRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _checkPlayerFairBattleExistRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static CheckPlayerFairBattleExistRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class CheckPlayerFairBattleExistResponse : pb::GeneratedMessageLite<CheckPlayerFairBattleExistResponse, CheckPlayerFairBattleExistResponse.Builder> {
    private CheckPlayerFairBattleExistResponse() { }
    private static readonly CheckPlayerFairBattleExistResponse defaultInstance = new CheckPlayerFairBattleExistResponse().MakeReadOnly();
    private static readonly string[] _checkPlayerFairBattleExistResponseFieldNames = new string[] { "isExist", "roomId" };
    private static readonly uint[] _checkPlayerFairBattleExistResponseFieldTags = new uint[] { 8, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CheckPlayerFairBattleExistResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CheckPlayerFairBattleExistResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IsExistFieldNumber = 1;
    private bool hasIsExist;
    private bool isExist_;
    public bool HasIsExist {
      get { return hasIsExist; }
    }
    public bool IsExist {
      get { return isExist_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RoomIdFieldNumber = 2;
    private bool hasRoomId;
    private long roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public long RoomId {
      get { return roomId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasIsExist) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _checkPlayerFairBattleExistResponseFieldNames;
      if (hasIsExist) {
        output.WriteBool(1, field_names[0], IsExist);
      }
      if (hasRoomId) {
        output.WriteInt64(2, field_names[1], RoomId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsExist) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsExist);
        }
        if (hasRoomId) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, RoomId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasIsExist) hash ^= isExist_.GetHashCode();
      if (hasRoomId) hash ^= roomId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CheckPlayerFairBattleExistResponse other = obj as CheckPlayerFairBattleExistResponse;
      if (other == null) return false;
      if (hasIsExist != other.hasIsExist || (hasIsExist && !isExist_.Equals(other.isExist_))) return false;
      if (hasRoomId != other.hasRoomId || (hasRoomId && !roomId_.Equals(other.roomId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CheckPlayerFairBattleExistResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CheckPlayerFairBattleExistResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CheckPlayerFairBattleExistResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CheckPlayerFairBattleExistResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CheckPlayerFairBattleExistResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CheckPlayerFairBattleExistResponse result;
      
      private CheckPlayerFairBattleExistResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CheckPlayerFairBattleExistResponse original = result;
          result = new CheckPlayerFairBattleExistResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CheckPlayerFairBattleExistResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CheckPlayerFairBattleExistResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.CheckPlayerFairBattleExistResponse.DefaultInstance; }
      }
      
      public override CheckPlayerFairBattleExistResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CheckPlayerFairBattleExistResponse) {
          return MergeFrom((CheckPlayerFairBattleExistResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CheckPlayerFairBattleExistResponse other) {
        if (other == global::com.zyd.common.proto.client.CheckPlayerFairBattleExistResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsExist) {
          IsExist = other.IsExist;
        }
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_checkPlayerFairBattleExistResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _checkPlayerFairBattleExistResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsExist = input.ReadBool(ref result.isExist_);
              break;
            }
            case 16: {
              result.hasRoomId = input.ReadInt64(ref result.roomId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasIsExist {
        get { return result.hasIsExist; }
      }
      public bool IsExist {
        get { return result.IsExist; }
        set { SetIsExist(value); }
      }
      public Builder SetIsExist(bool value) {
        PrepareBuilder();
        result.hasIsExist = true;
        result.isExist_ = value;
        return this;
      }
      public Builder ClearIsExist() {
        PrepareBuilder();
        result.hasIsExist = false;
        result.isExist_ = false;
        return this;
      }
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public long RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(long value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0L;
        return this;
      }
    }
    static CheckPlayerFairBattleExistResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FireBattleHeartBeatRequest : pb::GeneratedMessageLite<FireBattleHeartBeatRequest, FireBattleHeartBeatRequest.Builder> {
    private FireBattleHeartBeatRequest() { }
    private static readonly FireBattleHeartBeatRequest defaultInstance = new FireBattleHeartBeatRequest().MakeReadOnly();
    private static readonly string[] _fireBattleHeartBeatRequestFieldNames = new string[] {  };
    private static readonly uint[] _fireBattleHeartBeatRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FireBattleHeartBeatRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FireBattleHeartBeatRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fireBattleHeartBeatRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FireBattleHeartBeatRequest other = obj as FireBattleHeartBeatRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FireBattleHeartBeatRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FireBattleHeartBeatRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FireBattleHeartBeatRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FireBattleHeartBeatRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FireBattleHeartBeatRequest result;
      
      private FireBattleHeartBeatRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FireBattleHeartBeatRequest original = result;
          result = new FireBattleHeartBeatRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FireBattleHeartBeatRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FireBattleHeartBeatRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FireBattleHeartBeatRequest.DefaultInstance; }
      }
      
      public override FireBattleHeartBeatRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FireBattleHeartBeatRequest) {
          return MergeFrom((FireBattleHeartBeatRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FireBattleHeartBeatRequest other) {
        if (other == global::com.zyd.common.proto.client.FireBattleHeartBeatRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fireBattleHeartBeatRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fireBattleHeartBeatRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FireBattleHeartBeatRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FireBattleHeartBeatResponse : pb::GeneratedMessageLite<FireBattleHeartBeatResponse, FireBattleHeartBeatResponse.Builder> {
    private FireBattleHeartBeatResponse() { }
    private static readonly FireBattleHeartBeatResponse defaultInstance = new FireBattleHeartBeatResponse().MakeReadOnly();
    private static readonly string[] _fireBattleHeartBeatResponseFieldNames = new string[] {  };
    private static readonly uint[] _fireBattleHeartBeatResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FireBattleHeartBeatResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FireBattleHeartBeatResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fireBattleHeartBeatResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FireBattleHeartBeatResponse other = obj as FireBattleHeartBeatResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FireBattleHeartBeatResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FireBattleHeartBeatResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FireBattleHeartBeatResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FireBattleHeartBeatResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FireBattleHeartBeatResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FireBattleHeartBeatResponse result;
      
      private FireBattleHeartBeatResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FireBattleHeartBeatResponse original = result;
          result = new FireBattleHeartBeatResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FireBattleHeartBeatResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FireBattleHeartBeatResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FireBattleHeartBeatResponse.DefaultInstance; }
      }
      
      public override FireBattleHeartBeatResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FireBattleHeartBeatResponse) {
          return MergeFrom((FireBattleHeartBeatResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FireBattleHeartBeatResponse other) {
        if (other == global::com.zyd.common.proto.client.FireBattleHeartBeatResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fireBattleHeartBeatResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fireBattleHeartBeatResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FireBattleHeartBeatResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayNextPush : pb::GeneratedMessageLite<PlayNextPush, PlayNextPush.Builder> {
    private PlayNextPush() { }
    private static readonly PlayNextPush defaultInstance = new PlayNextPush().MakeReadOnly();
    private static readonly string[] _playNextPushFieldNames = new string[] {  };
    private static readonly uint[] _playNextPushFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayNextPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayNextPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playNextPushFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayNextPush other = obj as PlayNextPush;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayNextPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayNextPush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayNextPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayNextPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayNextPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayNextPush result;
      
      private PlayNextPush PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayNextPush original = result;
          result = new PlayNextPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayNextPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayNextPush DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayNextPush.DefaultInstance; }
      }
      
      public override PlayNextPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayNextPush) {
          return MergeFrom((PlayNextPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayNextPush other) {
        if (other == global::com.zyd.common.proto.client.PlayNextPush.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playNextPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playNextPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static PlayNextPush() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class ServerBattleMesPush : pb::GeneratedMessageLite<ServerBattleMesPush, ServerBattleMesPush.Builder> {
    private ServerBattleMesPush() { }
    private static readonly ServerBattleMesPush defaultInstance = new ServerBattleMesPush().MakeReadOnly();
    private static readonly string[] _serverBattleMesPushFieldNames = new string[] { "battleMes", "currentTime", "nextTime" };
    private static readonly uint[] _serverBattleMesPushFieldTags = new uint[] { 26, 8, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override ServerBattleMesPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ServerBattleMesPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int CurrentTimeFieldNumber = 1;
    private bool hasCurrentTime;
    private long currentTime_;
    public bool HasCurrentTime {
      get { return hasCurrentTime; }
    }
    public long CurrentTime {
      get { return currentTime_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NextTimeFieldNumber = 2;
    private bool hasNextTime;
    private long nextTime_;
    public bool HasNextTime {
      get { return hasNextTime; }
    }
    public long NextTime {
      get { return nextTime_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleMesFieldNumber = 3;
    private bool hasBattleMes;
    private global::com.zyd.common.proto.client.BattleMes battleMes_;
    public bool HasBattleMes {
      get { return hasBattleMes; }
    }
    public global::com.zyd.common.proto.client.BattleMes BattleMes {
      get { return battleMes_ ?? global::com.zyd.common.proto.client.BattleMes.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasCurrentTime) return false;
        if (!hasNextTime) return false;
        if (!hasBattleMes) return false;
        if (!BattleMes.IsInitialized) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _serverBattleMesPushFieldNames;
      if (hasCurrentTime) {
        output.WriteInt64(1, field_names[1], CurrentTime);
      }
      if (hasNextTime) {
        output.WriteInt64(2, field_names[2], NextTime);
      }
      if (hasBattleMes) {
        output.WriteMessage(3, field_names[0], BattleMes);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, CurrentTime);
        }
        if (hasNextTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, NextTime);
        }
        if (hasBattleMes) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BattleMes);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasCurrentTime) hash ^= currentTime_.GetHashCode();
      if (hasNextTime) hash ^= nextTime_.GetHashCode();
      if (hasBattleMes) hash ^= battleMes_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      ServerBattleMesPush other = obj as ServerBattleMesPush;
      if (other == null) return false;
      if (hasCurrentTime != other.hasCurrentTime || (hasCurrentTime && !currentTime_.Equals(other.currentTime_))) return false;
      if (hasNextTime != other.hasNextTime || (hasNextTime && !nextTime_.Equals(other.nextTime_))) return false;
      if (hasBattleMes != other.hasBattleMes || (hasBattleMes && !battleMes_.Equals(other.battleMes_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerBattleMesPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ServerBattleMesPush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(ServerBattleMesPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<ServerBattleMesPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ServerBattleMesPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ServerBattleMesPush result;
      
      private ServerBattleMesPush PrepareBuilder() {
        if (resultIsReadOnly) {
          ServerBattleMesPush original = result;
          result = new ServerBattleMesPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ServerBattleMesPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override ServerBattleMesPush DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.ServerBattleMesPush.DefaultInstance; }
      }
      
      public override ServerBattleMesPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is ServerBattleMesPush) {
          return MergeFrom((ServerBattleMesPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ServerBattleMesPush other) {
        if (other == global::com.zyd.common.proto.client.ServerBattleMesPush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentTime) {
          CurrentTime = other.CurrentTime;
        }
        if (other.HasNextTime) {
          NextTime = other.NextTime;
        }
        if (other.HasBattleMes) {
          MergeBattleMes(other.BattleMes);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_serverBattleMesPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _serverBattleMesPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCurrentTime = input.ReadInt64(ref result.currentTime_);
              break;
            }
            case 16: {
              result.hasNextTime = input.ReadInt64(ref result.nextTime_);
              break;
            }
            case 26: {
              global::com.zyd.common.proto.client.BattleMes.Builder subBuilder = global::com.zyd.common.proto.client.BattleMes.CreateBuilder();
              if (result.hasBattleMes) {
                subBuilder.MergeFrom(BattleMes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BattleMes = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasCurrentTime {
        get { return result.hasCurrentTime; }
      }
      public long CurrentTime {
        get { return result.CurrentTime; }
        set { SetCurrentTime(value); }
      }
      public Builder SetCurrentTime(long value) {
        PrepareBuilder();
        result.hasCurrentTime = true;
        result.currentTime_ = value;
        return this;
      }
      public Builder ClearCurrentTime() {
        PrepareBuilder();
        result.hasCurrentTime = false;
        result.currentTime_ = 0L;
        return this;
      }
      
      public bool HasNextTime {
        get { return result.hasNextTime; }
      }
      public long NextTime {
        get { return result.NextTime; }
        set { SetNextTime(value); }
      }
      public Builder SetNextTime(long value) {
        PrepareBuilder();
        result.hasNextTime = true;
        result.nextTime_ = value;
        return this;
      }
      public Builder ClearNextTime() {
        PrepareBuilder();
        result.hasNextTime = false;
        result.nextTime_ = 0L;
        return this;
      }
      
      public bool HasBattleMes {
       get { return result.hasBattleMes; }
      }
      public global::com.zyd.common.proto.client.BattleMes BattleMes {
        get { return result.BattleMes; }
        set { SetBattleMes(value); }
      }
      public Builder SetBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleMes = true;
        result.battleMes_ = value;
        return this;
      }
      public Builder SetBattleMes(global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBattleMes = true;
        result.battleMes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBattleMes &&
            result.battleMes_ != global::com.zyd.common.proto.client.BattleMes.DefaultInstance) {
            result.battleMes_ = global::com.zyd.common.proto.client.BattleMes.CreateBuilder(result.battleMes_).MergeFrom(value).BuildPartial();
        } else {
          result.battleMes_ = value;
        }
        result.hasBattleMes = true;
        return this;
      }
      public Builder ClearBattleMes() {
        PrepareBuilder();
        result.hasBattleMes = false;
        result.battleMes_ = null;
        return this;
      }
    }
    static ServerBattleMesPush() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelStartPush : pb::GeneratedMessageLite<FairBattleLevelStartPush, FairBattleLevelStartPush.Builder> {
    private FairBattleLevelStartPush() { }
    private static readonly FairBattleLevelStartPush defaultInstance = new FairBattleLevelStartPush().MakeReadOnly();
    private static readonly string[] _fairBattleLevelStartPushFieldNames = new string[] { "playerMes", "randomSeed", "roomId", "userId", "zoneId" };
    private static readonly uint[] _fairBattleLevelStartPushFieldTags = new uint[] { 10, 40, 32, 24, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelStartPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelStartPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PlayerMesFieldNumber = 1;
    private pbc::PopsicleList<global::com.zyd.common.proto.client.PlayerMes> playerMes_ = new pbc::PopsicleList<global::com.zyd.common.proto.client.PlayerMes>();
    public scg::IList<global::com.zyd.common.proto.client.PlayerMes> PlayerMesList {
      get { return playerMes_; }
    }
    public int PlayerMesCount {
      get { return playerMes_.Count; }
    }
    public global::com.zyd.common.proto.client.PlayerMes GetPlayerMes(int index) {
      return playerMes_[index];
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ZoneIdFieldNumber = 2;
    private bool hasZoneId;
    private int zoneId_;
    public bool HasZoneId {
      get { return hasZoneId; }
    }
    public int ZoneId {
      get { return zoneId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 3;
    private bool hasUserId;
    private long userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public long UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RoomIdFieldNumber = 4;
    private bool hasRoomId;
    private long roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public long RoomId {
      get { return roomId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RandomSeedFieldNumber = 5;
    private bool hasRandomSeed;
    private int randomSeed_;
    public bool HasRandomSeed {
      get { return hasRandomSeed; }
    }
    public int RandomSeed {
      get { return randomSeed_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasZoneId) return false;
        if (!hasUserId) return false;
        foreach (global::com.zyd.common.proto.client.PlayerMes element in PlayerMesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelStartPushFieldNames;
      if (playerMes_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playerMes_);
      }
      if (hasZoneId) {
        output.WriteInt32(2, field_names[4], ZoneId);
      }
      if (hasUserId) {
        output.WriteInt64(3, field_names[3], UserId);
      }
      if (hasRoomId) {
        output.WriteInt64(4, field_names[2], RoomId);
      }
      if (hasRandomSeed) {
        output.WriteInt32(5, field_names[1], RandomSeed);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.zyd.common.proto.client.PlayerMes element in PlayerMesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasZoneId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ZoneId);
        }
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, UserId);
        }
        if (hasRoomId) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, RoomId);
        }
        if (hasRandomSeed) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, RandomSeed);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      foreach(global::com.zyd.common.proto.client.PlayerMes i in playerMes_)
        hash ^= i.GetHashCode();
      if (hasZoneId) hash ^= zoneId_.GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasRoomId) hash ^= roomId_.GetHashCode();
      if (hasRandomSeed) hash ^= randomSeed_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelStartPush other = obj as FairBattleLevelStartPush;
      if (other == null) return false;
      if(playerMes_.Count != other.playerMes_.Count) return false;
      for(int ix=0; ix < playerMes_.Count; ix++)
        if(!playerMes_[ix].Equals(other.playerMes_[ix])) return false;
      if (hasZoneId != other.hasZoneId || (hasZoneId && !zoneId_.Equals(other.zoneId_))) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasRoomId != other.hasRoomId || (hasRoomId && !roomId_.Equals(other.roomId_))) return false;
      if (hasRandomSeed != other.hasRandomSeed || (hasRandomSeed && !randomSeed_.Equals(other.randomSeed_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelStartPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelStartPush MakeReadOnly() {
      playerMes_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelStartPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelStartPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelStartPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelStartPush result;
      
      private FairBattleLevelStartPush PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelStartPush original = result;
          result = new FairBattleLevelStartPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelStartPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelStartPush DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelStartPush.DefaultInstance; }
      }
      
      public override FairBattleLevelStartPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelStartPush) {
          return MergeFrom((FairBattleLevelStartPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelStartPush other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelStartPush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.playerMes_.Count != 0) {
          result.playerMes_.Add(other.playerMes_);
        }
        if (other.HasZoneId) {
          ZoneId = other.ZoneId;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasRandomSeed) {
          RandomSeed = other.RandomSeed;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelStartPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelStartPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playerMes_, global::com.zyd.common.proto.client.PlayerMes.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasZoneId = input.ReadInt32(ref result.zoneId_);
              break;
            }
            case 24: {
              result.hasUserId = input.ReadInt64(ref result.userId_);
              break;
            }
            case 32: {
              result.hasRoomId = input.ReadInt64(ref result.roomId_);
              break;
            }
            case 40: {
              result.hasRandomSeed = input.ReadInt32(ref result.randomSeed_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.zyd.common.proto.client.PlayerMes> PlayerMesList {
        get { return PrepareBuilder().playerMes_; }
      }
      public int PlayerMesCount {
        get { return result.PlayerMesCount; }
      }
      public global::com.zyd.common.proto.client.PlayerMes GetPlayerMes(int index) {
        return result.GetPlayerMes(index);
      }
      public Builder SetPlayerMes(int index, global::com.zyd.common.proto.client.PlayerMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playerMes_[index] = value;
        return this;
      }
      public Builder SetPlayerMes(int index, global::com.zyd.common.proto.client.PlayerMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playerMes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayerMes(global::com.zyd.common.proto.client.PlayerMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playerMes_.Add(value);
        return this;
      }
      public Builder AddPlayerMes(global::com.zyd.common.proto.client.PlayerMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playerMes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayerMes(scg::IEnumerable<global::com.zyd.common.proto.client.PlayerMes> values) {
        PrepareBuilder();
        result.playerMes_.Add(values);
        return this;
      }
      public Builder ClearPlayerMes() {
        PrepareBuilder();
        result.playerMes_.Clear();
        return this;
      }
      
      public bool HasZoneId {
        get { return result.hasZoneId; }
      }
      public int ZoneId {
        get { return result.ZoneId; }
        set { SetZoneId(value); }
      }
      public Builder SetZoneId(int value) {
        PrepareBuilder();
        result.hasZoneId = true;
        result.zoneId_ = value;
        return this;
      }
      public Builder ClearZoneId() {
        PrepareBuilder();
        result.hasZoneId = false;
        result.zoneId_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public long UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(long value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0L;
        return this;
      }
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public long RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(long value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0L;
        return this;
      }
      
      public bool HasRandomSeed {
        get { return result.hasRandomSeed; }
      }
      public int RandomSeed {
        get { return result.RandomSeed; }
        set { SetRandomSeed(value); }
      }
      public Builder SetRandomSeed(int value) {
        PrepareBuilder();
        result.hasRandomSeed = true;
        result.randomSeed_ = value;
        return this;
      }
      public Builder ClearRandomSeed() {
        PrepareBuilder();
        result.hasRandomSeed = false;
        result.randomSeed_ = 0;
        return this;
      }
    }
    static FairBattleLevelStartPush() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelReadyFinishedPush : pb::GeneratedMessageLite<FairBattleLevelReadyFinishedPush, FairBattleLevelReadyFinishedPush.Builder> {
    private FairBattleLevelReadyFinishedPush() { }
    private static readonly FairBattleLevelReadyFinishedPush defaultInstance = new FairBattleLevelReadyFinishedPush().MakeReadOnly();
    private static readonly string[] _fairBattleLevelReadyFinishedPushFieldNames = new string[] {  };
    private static readonly uint[] _fairBattleLevelReadyFinishedPushFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelReadyFinishedPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelReadyFinishedPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelReadyFinishedPushFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelReadyFinishedPush other = obj as FairBattleLevelReadyFinishedPush;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelReadyFinishedPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelReadyFinishedPush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelReadyFinishedPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelReadyFinishedPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelReadyFinishedPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelReadyFinishedPush result;
      
      private FairBattleLevelReadyFinishedPush PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelReadyFinishedPush original = result;
          result = new FairBattleLevelReadyFinishedPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelReadyFinishedPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelReadyFinishedPush DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelReadyFinishedPush.DefaultInstance; }
      }
      
      public override FairBattleLevelReadyFinishedPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelReadyFinishedPush) {
          return MergeFrom((FairBattleLevelReadyFinishedPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelReadyFinishedPush other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelReadyFinishedPush.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelReadyFinishedPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelReadyFinishedPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static FairBattleLevelReadyFinishedPush() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class FairBattleLevelEndPush : pb::GeneratedMessageLite<FairBattleLevelEndPush, FairBattleLevelEndPush.Builder> {
    private FairBattleLevelEndPush() { }
    private static readonly FairBattleLevelEndPush defaultInstance = new FairBattleLevelEndPush().MakeReadOnly();
    private static readonly string[] _fairBattleLevelEndPushFieldNames = new string[] { "battleMes", "result" };
    private static readonly uint[] _fairBattleLevelEndPushFieldTags = new uint[] { 18, 24 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override FairBattleLevelEndPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FairBattleLevelEndPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleMesFieldNumber = 2;
    private pbc::PopsicleList<global::com.zyd.common.proto.client.BattleMes> battleMes_ = new pbc::PopsicleList<global::com.zyd.common.proto.client.BattleMes>();
    public scg::IList<global::com.zyd.common.proto.client.BattleMes> BattleMesList {
      get { return battleMes_; }
    }
    public int BattleMesCount {
      get { return battleMes_.Count; }
    }
    public global::com.zyd.common.proto.client.BattleMes GetBattleMes(int index) {
      return battleMes_[index];
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private int result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public int Result {
      get { return result_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        foreach (global::com.zyd.common.proto.client.BattleMes element in BattleMesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fairBattleLevelEndPushFieldNames;
      if (battleMes_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], battleMes_);
      }
      if (hasResult) {
        output.WriteInt32(3, field_names[1], Result);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.zyd.common.proto.client.BattleMes element in BattleMesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Result);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      foreach(global::com.zyd.common.proto.client.BattleMes i in battleMes_)
        hash ^= i.GetHashCode();
      if (hasResult) hash ^= result_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      FairBattleLevelEndPush other = obj as FairBattleLevelEndPush;
      if (other == null) return false;
      if(battleMes_.Count != other.battleMes_.Count) return false;
      for(int ix=0; ix < battleMes_.Count; ix++)
        if(!battleMes_[ix].Equals(other.battleMes_[ix])) return false;
      if (hasResult != other.hasResult || (hasResult && !result_.Equals(other.result_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static FairBattleLevelEndPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FairBattleLevelEndPush MakeReadOnly() {
      battleMes_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(FairBattleLevelEndPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<FairBattleLevelEndPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FairBattleLevelEndPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FairBattleLevelEndPush result;
      
      private FairBattleLevelEndPush PrepareBuilder() {
        if (resultIsReadOnly) {
          FairBattleLevelEndPush original = result;
          result = new FairBattleLevelEndPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FairBattleLevelEndPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override FairBattleLevelEndPush DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.FairBattleLevelEndPush.DefaultInstance; }
      }
      
      public override FairBattleLevelEndPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is FairBattleLevelEndPush) {
          return MergeFrom((FairBattleLevelEndPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FairBattleLevelEndPush other) {
        if (other == global::com.zyd.common.proto.client.FairBattleLevelEndPush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.battleMes_.Count != 0) {
          result.battleMes_.Add(other.battleMes_);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fairBattleLevelEndPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fairBattleLevelEndPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.battleMes_, global::com.zyd.common.proto.client.BattleMes.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasResult = input.ReadInt32(ref result.result_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.zyd.common.proto.client.BattleMes> BattleMesList {
        get { return PrepareBuilder().battleMes_; }
      }
      public int BattleMesCount {
        get { return result.BattleMesCount; }
      }
      public global::com.zyd.common.proto.client.BattleMes GetBattleMes(int index) {
        return result.GetBattleMes(index);
      }
      public Builder SetBattleMes(int index, global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleMes_[index] = value;
        return this;
      }
      public Builder SetBattleMes(int index, global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleMes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBattleMes(global::com.zyd.common.proto.client.BattleMes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleMes_.Add(value);
        return this;
      }
      public Builder AddBattleMes(global::com.zyd.common.proto.client.BattleMes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleMes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBattleMes(scg::IEnumerable<global::com.zyd.common.proto.client.BattleMes> values) {
        PrepareBuilder();
        result.battleMes_.Add(values);
        return this;
      }
      public Builder ClearBattleMes() {
        PrepareBuilder();
        result.battleMes_.Clear();
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public int Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(int value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
    }
    static FairBattleLevelEndPush() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class BattleMes : pb::GeneratedMessageLite<BattleMes, BattleMes.Builder> {
    private BattleMes() { }
    private static readonly BattleMes defaultInstance = new BattleMes().MakeReadOnly();
    private static readonly string[] _battleMesFieldNames = new string[] { "attckUserId", "dirX", "dirY", "itemIndex", "playNum", "playSkill" };
    private static readonly uint[] _battleMesFieldTags = new uint[] { 48, 16, 24, 40, 8, 32 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override BattleMes DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleMes ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PlayNumFieldNumber = 1;
    private bool hasPlayNum;
    private int playNum_;
    public bool HasPlayNum {
      get { return hasPlayNum; }
    }
    public int PlayNum {
      get { return playNum_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int DirXFieldNumber = 2;
    private bool hasDirX;
    private long dirX_;
    public bool HasDirX {
      get { return hasDirX; }
    }
    public long DirX {
      get { return dirX_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int DirYFieldNumber = 3;
    private bool hasDirY;
    private long dirY_;
    public bool HasDirY {
      get { return hasDirY; }
    }
    public long DirY {
      get { return dirY_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PlaySkillFieldNumber = 4;
    private bool hasPlaySkill;
    private bool playSkill_;
    public bool HasPlaySkill {
      get { return hasPlaySkill; }
    }
    public bool PlaySkill {
      get { return playSkill_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ItemIndexFieldNumber = 5;
    private bool hasItemIndex;
    private int itemIndex_;
    public bool HasItemIndex {
      get { return hasItemIndex; }
    }
    public int ItemIndex {
      get { return itemIndex_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int AttckUserIdFieldNumber = 6;
    private bool hasAttckUserId;
    private long attckUserId_;
    public bool HasAttckUserId {
      get { return hasAttckUserId; }
    }
    public long AttckUserId {
      get { return attckUserId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasPlayNum) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _battleMesFieldNames;
      if (hasPlayNum) {
        output.WriteInt32(1, field_names[4], PlayNum);
      }
      if (hasDirX) {
        output.WriteInt64(2, field_names[1], DirX);
      }
      if (hasDirY) {
        output.WriteInt64(3, field_names[2], DirY);
      }
      if (hasPlaySkill) {
        output.WriteBool(4, field_names[5], PlaySkill);
      }
      if (hasItemIndex) {
        output.WriteInt32(5, field_names[3], ItemIndex);
      }
      if (hasAttckUserId) {
        output.WriteInt64(6, field_names[0], AttckUserId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, PlayNum);
        }
        if (hasDirX) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, DirX);
        }
        if (hasDirY) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, DirY);
        }
        if (hasPlaySkill) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, PlaySkill);
        }
        if (hasItemIndex) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ItemIndex);
        }
        if (hasAttckUserId) {
          size += pb::CodedOutputStream.ComputeInt64Size(6, AttckUserId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasPlayNum) hash ^= playNum_.GetHashCode();
      if (hasDirX) hash ^= dirX_.GetHashCode();
      if (hasDirY) hash ^= dirY_.GetHashCode();
      if (hasPlaySkill) hash ^= playSkill_.GetHashCode();
      if (hasItemIndex) hash ^= itemIndex_.GetHashCode();
      if (hasAttckUserId) hash ^= attckUserId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      BattleMes other = obj as BattleMes;
      if (other == null) return false;
      if (hasPlayNum != other.hasPlayNum || (hasPlayNum && !playNum_.Equals(other.playNum_))) return false;
      if (hasDirX != other.hasDirX || (hasDirX && !dirX_.Equals(other.dirX_))) return false;
      if (hasDirY != other.hasDirY || (hasDirY && !dirY_.Equals(other.dirY_))) return false;
      if (hasPlaySkill != other.hasPlaySkill || (hasPlaySkill && !playSkill_.Equals(other.playSkill_))) return false;
      if (hasItemIndex != other.hasItemIndex || (hasItemIndex && !itemIndex_.Equals(other.itemIndex_))) return false;
      if (hasAttckUserId != other.hasAttckUserId || (hasAttckUserId && !attckUserId_.Equals(other.attckUserId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static BattleMes ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleMes MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(BattleMes prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<BattleMes, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleMes cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleMes result;
      
      private BattleMes PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleMes original = result;
          result = new BattleMes();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleMes MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override BattleMes DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.BattleMes.DefaultInstance; }
      }
      
      public override BattleMes BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is BattleMes) {
          return MergeFrom((BattleMes) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleMes other) {
        if (other == global::com.zyd.common.proto.client.BattleMes.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayNum) {
          PlayNum = other.PlayNum;
        }
        if (other.HasDirX) {
          DirX = other.DirX;
        }
        if (other.HasDirY) {
          DirY = other.DirY;
        }
        if (other.HasPlaySkill) {
          PlaySkill = other.PlaySkill;
        }
        if (other.HasItemIndex) {
          ItemIndex = other.ItemIndex;
        }
        if (other.HasAttckUserId) {
          AttckUserId = other.AttckUserId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleMesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleMesFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPlayNum = input.ReadInt32(ref result.playNum_);
              break;
            }
            case 16: {
              result.hasDirX = input.ReadInt64(ref result.dirX_);
              break;
            }
            case 24: {
              result.hasDirY = input.ReadInt64(ref result.dirY_);
              break;
            }
            case 32: {
              result.hasPlaySkill = input.ReadBool(ref result.playSkill_);
              break;
            }
            case 40: {
              result.hasItemIndex = input.ReadInt32(ref result.itemIndex_);
              break;
            }
            case 48: {
              result.hasAttckUserId = input.ReadInt64(ref result.attckUserId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasPlayNum {
        get { return result.hasPlayNum; }
      }
      public int PlayNum {
        get { return result.PlayNum; }
        set { SetPlayNum(value); }
      }
      public Builder SetPlayNum(int value) {
        PrepareBuilder();
        result.hasPlayNum = true;
        result.playNum_ = value;
        return this;
      }
      public Builder ClearPlayNum() {
        PrepareBuilder();
        result.hasPlayNum = false;
        result.playNum_ = 0;
        return this;
      }
      
      public bool HasDirX {
        get { return result.hasDirX; }
      }
      public long DirX {
        get { return result.DirX; }
        set { SetDirX(value); }
      }
      public Builder SetDirX(long value) {
        PrepareBuilder();
        result.hasDirX = true;
        result.dirX_ = value;
        return this;
      }
      public Builder ClearDirX() {
        PrepareBuilder();
        result.hasDirX = false;
        result.dirX_ = 0L;
        return this;
      }
      
      public bool HasDirY {
        get { return result.hasDirY; }
      }
      public long DirY {
        get { return result.DirY; }
        set { SetDirY(value); }
      }
      public Builder SetDirY(long value) {
        PrepareBuilder();
        result.hasDirY = true;
        result.dirY_ = value;
        return this;
      }
      public Builder ClearDirY() {
        PrepareBuilder();
        result.hasDirY = false;
        result.dirY_ = 0L;
        return this;
      }
      
      public bool HasPlaySkill {
        get { return result.hasPlaySkill; }
      }
      public bool PlaySkill {
        get { return result.PlaySkill; }
        set { SetPlaySkill(value); }
      }
      public Builder SetPlaySkill(bool value) {
        PrepareBuilder();
        result.hasPlaySkill = true;
        result.playSkill_ = value;
        return this;
      }
      public Builder ClearPlaySkill() {
        PrepareBuilder();
        result.hasPlaySkill = false;
        result.playSkill_ = false;
        return this;
      }
      
      public bool HasItemIndex {
        get { return result.hasItemIndex; }
      }
      public int ItemIndex {
        get { return result.ItemIndex; }
        set { SetItemIndex(value); }
      }
      public Builder SetItemIndex(int value) {
        PrepareBuilder();
        result.hasItemIndex = true;
        result.itemIndex_ = value;
        return this;
      }
      public Builder ClearItemIndex() {
        PrepareBuilder();
        result.hasItemIndex = false;
        result.itemIndex_ = 0;
        return this;
      }
      
      public bool HasAttckUserId {
        get { return result.hasAttckUserId; }
      }
      public long AttckUserId {
        get { return result.AttckUserId; }
        set { SetAttckUserId(value); }
      }
      public Builder SetAttckUserId(long value) {
        PrepareBuilder();
        result.hasAttckUserId = true;
        result.attckUserId_ = value;
        return this;
      }
      public Builder ClearAttckUserId() {
        PrepareBuilder();
        result.hasAttckUserId = false;
        result.attckUserId_ = 0L;
        return this;
      }
    }
    static BattleMes() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerMes : pb::GeneratedMessageLite<PlayerMes, PlayerMes.Builder> {
    private PlayerMes() { }
    private static readonly PlayerMes defaultInstance = new PlayerMes().MakeReadOnly();
    private static readonly string[] _playerMesFieldNames = new string[] { "userId" };
    private static readonly uint[] _playerMesFieldTags = new uint[] { 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerMes DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerMes ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private long userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public long UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerMesFieldNames;
      if (hasUserId) {
        output.WriteInt64(1, field_names[0], UserId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, UserId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerMes other = obj as PlayerMes;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerMes ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerMes MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerMes prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerMes, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerMes cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerMes result;
      
      private PlayerMes PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerMes original = result;
          result = new PlayerMes();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerMes MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerMes DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerMes.DefaultInstance; }
      }
      
      public override PlayerMes BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerMes) {
          return MergeFrom((PlayerMes) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerMes other) {
        if (other == global::com.zyd.common.proto.client.PlayerMes.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerMesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerMesFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt64(ref result.userId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public long UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(long value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0L;
        return this;
      }
    }
    static PlayerMes() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.FireBattle.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
#pragma warning restore
