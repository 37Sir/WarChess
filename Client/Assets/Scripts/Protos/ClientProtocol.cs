// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=null.  DO NOT EDIT!
#pragma warning disable
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.zyd.common.proto.client {
  
  public static partial class ClientProtocol {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static ClientProtocol() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Enums
  public enum EDeviceType {
    None = 0,
    IOS = 1,
    Android = 2,
  }
  
  public enum ErrorCode {
    SERVER_ERROR = 1,
    SHOP_ITEM_WRONG = 17,
    PLAYER_RMB_NOT_ENOUGH = 21,
    PLAYER_GOLD_NOT_ENOUGH = 22,
    PARAMETER_NOT_CORRECT = 50,
    SYSCONFIG_NOT_CORRECT = 51,
    HACKER_ERROR = 55,
    NOT_GET_LOCK = 300,
    ACTIVATION_CODE_ERROR = 301,
    PLAYER_NOT_MATCH_SUCCESS = 400,
    PLAYER_NOT_START = 401,
    DUPLICATE_REQUEST = 700,
    VERSION_ERROR = 995,
    DEVICE_TYPE_NOT_CORRECT = 998,
    NOT_HAVE_LAST_RESPONSE = 99999,
    SERVER_MAINTENACE = 100000,
  }
  
  public enum RpcErrorCode {
    UNKNOWN = -1,
    INVALID_PROTOCOL = -2,
    INVALID_ARG = -3,
    TIMEOUT = -4,
    SERVER_BUSY = -5,
    PUSHTIMEOUT = -6,
  }
  
  #endregion
  
  #region Messages
  public sealed partial class MessageHeaderRequest : pb::GeneratedMessageLite<MessageHeaderRequest, MessageHeaderRequest.Builder> {
    private MessageHeaderRequest() { }
    private static readonly MessageHeaderRequest defaultInstance = new MessageHeaderRequest().MakeReadOnly();
    private static readonly string[] _messageHeaderRequestFieldNames = new string[] { "name", "requestToken", "userInfo" };
    private static readonly uint[] _messageHeaderRequestFieldTags = new uint[] { 10, 26, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MessageHeaderRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MessageHeaderRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private global::com.zyd.common.proto.client.MessageHeaderInfo userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::com.zyd.common.proto.client.MessageHeaderInfo UserInfo {
      get { return userInfo_ ?? global::com.zyd.common.proto.client.MessageHeaderInfo.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RequestTokenFieldNumber = 3;
    private bool hasRequestToken;
    private string requestToken_ = "";
    public bool HasRequestToken {
      get { return hasRequestToken; }
    }
    public string RequestToken {
      get { return requestToken_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messageHeaderRequestFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasUserInfo) {
        output.WriteMessage(2, field_names[2], UserInfo);
      }
      if (hasRequestToken) {
        output.WriteString(3, field_names[1], RequestToken);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasUserInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, UserInfo);
        }
        if (hasRequestToken) {
          size += pb::CodedOutputStream.ComputeStringSize(3, RequestToken);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasName) hash ^= name_.GetHashCode();
      if (hasUserInfo) hash ^= userInfo_.GetHashCode();
      if (hasRequestToken) hash ^= requestToken_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MessageHeaderRequest other = obj as MessageHeaderRequest;
      if (other == null) return false;
      if (hasName != other.hasName || (hasName && !name_.Equals(other.name_))) return false;
      if (hasUserInfo != other.hasUserInfo || (hasUserInfo && !userInfo_.Equals(other.userInfo_))) return false;
      if (hasRequestToken != other.hasRequestToken || (hasRequestToken && !requestToken_.Equals(other.requestToken_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MessageHeaderRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MessageHeaderRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MessageHeaderRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MessageHeaderRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MessageHeaderRequest result;
      
      private MessageHeaderRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          MessageHeaderRequest original = result;
          result = new MessageHeaderRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MessageHeaderRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MessageHeaderRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.MessageHeaderRequest.DefaultInstance; }
      }
      
      public override MessageHeaderRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MessageHeaderRequest) {
          return MergeFrom((MessageHeaderRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageHeaderRequest other) {
        if (other == global::com.zyd.common.proto.client.MessageHeaderRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasRequestToken) {
          RequestToken = other.RequestToken;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageHeaderRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageHeaderRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              global::com.zyd.common.proto.client.MessageHeaderInfo.Builder subBuilder = global::com.zyd.common.proto.client.MessageHeaderInfo.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasRequestToken = input.ReadString(ref result.requestToken_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::com.zyd.common.proto.client.MessageHeaderInfo UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::com.zyd.common.proto.client.MessageHeaderInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::com.zyd.common.proto.client.MessageHeaderInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::com.zyd.common.proto.client.MessageHeaderInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::com.zyd.common.proto.client.MessageHeaderInfo.DefaultInstance) {
            result.userInfo_ = global::com.zyd.common.proto.client.MessageHeaderInfo.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasRequestToken {
        get { return result.hasRequestToken; }
      }
      public string RequestToken {
        get { return result.RequestToken; }
        set { SetRequestToken(value); }
      }
      public Builder SetRequestToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestToken = true;
        result.requestToken_ = value;
        return this;
      }
      public Builder ClearRequestToken() {
        PrepareBuilder();
        result.hasRequestToken = false;
        result.requestToken_ = "";
        return this;
      }
    }
    static MessageHeaderRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  public sealed partial class MessageHeaderInfo : pb::GeneratedMessageLite<MessageHeaderInfo, MessageHeaderInfo.Builder> {
    private MessageHeaderInfo() { }
    private static readonly MessageHeaderInfo defaultInstance = new MessageHeaderInfo().MakeReadOnly();
    private static readonly string[] _messageHeaderInfoFieldNames = new string[] { "clientIp", "ext", "requestToken", "sign", "userDevice", "userId", "userToken" };
    private static readonly uint[] _messageHeaderInfoFieldTags = new uint[] { 42, 730, 34, 722, 16, 56, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MessageHeaderInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MessageHeaderInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserTokenFieldNumber = 1;
    private bool hasUserToken;
    private string userToken_ = "";
    public bool HasUserToken {
      get { return hasUserToken; }
    }
    public string UserToken {
      get { return userToken_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserDeviceFieldNumber = 2;
    private bool hasUserDevice;
    private global::com.zyd.common.proto.client.EDeviceType userDevice_ = global::com.zyd.common.proto.client.EDeviceType.None;
    public bool HasUserDevice {
      get { return hasUserDevice; }
    }
    public global::com.zyd.common.proto.client.EDeviceType UserDevice {
      get { return userDevice_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RequestTokenFieldNumber = 4;
    private bool hasRequestToken;
    private string requestToken_ = "";
    public bool HasRequestToken {
      get { return hasRequestToken; }
    }
    public string RequestToken {
      get { return requestToken_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ClientIpFieldNumber = 5;
    private bool hasClientIp;
    private string clientIp_ = "";
    public bool HasClientIp {
      get { return hasClientIp; }
    }
    public string ClientIp {
      get { return clientIp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 7;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int SignFieldNumber = 90;
    private bool hasSign;
    private string sign_ = "";
    public bool HasSign {
      get { return hasSign; }
    }
    public string Sign {
      get { return sign_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ExtFieldNumber = 91;
    private bool hasExt;
    private string ext_ = "";
    public bool HasExt {
      get { return hasExt; }
    }
    public string Ext {
      get { return ext_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messageHeaderInfoFieldNames;
      if (hasUserToken) {
        output.WriteString(1, field_names[6], UserToken);
      }
      if (hasUserDevice) {
        output.WriteEnum(2, field_names[4], (int) UserDevice, UserDevice);
      }
      if (hasRequestToken) {
        output.WriteString(4, field_names[2], RequestToken);
      }
      if (hasClientIp) {
        output.WriteString(5, field_names[0], ClientIp);
      }
      if (hasUserId) {
        output.WriteInt32(7, field_names[5], UserId);
      }
      if (hasSign) {
        output.WriteString(90, field_names[3], Sign);
      }
      if (hasExt) {
        output.WriteString(91, field_names[1], Ext);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserToken);
        }
        if (hasUserDevice) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) UserDevice);
        }
        if (hasRequestToken) {
          size += pb::CodedOutputStream.ComputeStringSize(4, RequestToken);
        }
        if (hasClientIp) {
          size += pb::CodedOutputStream.ComputeStringSize(5, ClientIp);
        }
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, UserId);
        }
        if (hasSign) {
          size += pb::CodedOutputStream.ComputeStringSize(90, Sign);
        }
        if (hasExt) {
          size += pb::CodedOutputStream.ComputeStringSize(91, Ext);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserToken) hash ^= userToken_.GetHashCode();
      if (hasUserDevice) hash ^= userDevice_.GetHashCode();
      if (hasRequestToken) hash ^= requestToken_.GetHashCode();
      if (hasClientIp) hash ^= clientIp_.GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasSign) hash ^= sign_.GetHashCode();
      if (hasExt) hash ^= ext_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MessageHeaderInfo other = obj as MessageHeaderInfo;
      if (other == null) return false;
      if (hasUserToken != other.hasUserToken || (hasUserToken && !userToken_.Equals(other.userToken_))) return false;
      if (hasUserDevice != other.hasUserDevice || (hasUserDevice && !userDevice_.Equals(other.userDevice_))) return false;
      if (hasRequestToken != other.hasRequestToken || (hasRequestToken && !requestToken_.Equals(other.requestToken_))) return false;
      if (hasClientIp != other.hasClientIp || (hasClientIp && !clientIp_.Equals(other.clientIp_))) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasSign != other.hasSign || (hasSign && !sign_.Equals(other.sign_))) return false;
      if (hasExt != other.hasExt || (hasExt && !ext_.Equals(other.ext_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MessageHeaderInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MessageHeaderInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MessageHeaderInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MessageHeaderInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MessageHeaderInfo result;
      
      private MessageHeaderInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MessageHeaderInfo original = result;
          result = new MessageHeaderInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MessageHeaderInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MessageHeaderInfo DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.MessageHeaderInfo.DefaultInstance; }
      }
      
      public override MessageHeaderInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MessageHeaderInfo) {
          return MergeFrom((MessageHeaderInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageHeaderInfo other) {
        if (other == global::com.zyd.common.proto.client.MessageHeaderInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserToken) {
          UserToken = other.UserToken;
        }
        if (other.HasUserDevice) {
          UserDevice = other.UserDevice;
        }
        if (other.HasRequestToken) {
          RequestToken = other.RequestToken;
        }
        if (other.HasClientIp) {
          ClientIp = other.ClientIp;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasSign) {
          Sign = other.Sign;
        }
        if (other.HasExt) {
          Ext = other.Ext;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageHeaderInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageHeaderInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserToken = input.ReadString(ref result.userToken_);
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.userDevice_ = (global::com.zyd.common.proto.client.EDeviceType)System.Enum.Parse(typeof(global::com.zyd.common.proto.client.EDeviceType), str);
                  } else {
                    result.userDevice_ = (global::com.zyd.common.proto.client.EDeviceType)number;
                  }
                  result.hasUserDevice = true;
                }
                catch {
                }
              }
              break;
            }
            case 34: {
              result.hasRequestToken = input.ReadString(ref result.requestToken_);
              break;
            }
            case 42: {
              result.hasClientIp = input.ReadString(ref result.clientIp_);
              break;
            }
            case 56: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 722: {
              result.hasSign = input.ReadString(ref result.sign_);
              break;
            }
            case 730: {
              result.hasExt = input.ReadString(ref result.ext_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserToken {
        get { return result.hasUserToken; }
      }
      public string UserToken {
        get { return result.UserToken; }
        set { SetUserToken(value); }
      }
      public Builder SetUserToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserToken = true;
        result.userToken_ = value;
        return this;
      }
      public Builder ClearUserToken() {
        PrepareBuilder();
        result.hasUserToken = false;
        result.userToken_ = "";
        return this;
      }
      
      public bool HasUserDevice {
       get { return result.hasUserDevice; }
      }
      public global::com.zyd.common.proto.client.EDeviceType UserDevice {
        get { return result.UserDevice; }
        set { SetUserDevice(value); }
      }
      public Builder SetUserDevice(global::com.zyd.common.proto.client.EDeviceType value) {
        PrepareBuilder();
        result.hasUserDevice = true;
        result.userDevice_ = value;
        return this;
      }
      public Builder ClearUserDevice() {
        PrepareBuilder();
        result.hasUserDevice = false;
        result.userDevice_ = global::com.zyd.common.proto.client.EDeviceType.None;
        return this;
      }
      
      public bool HasRequestToken {
        get { return result.hasRequestToken; }
      }
      public string RequestToken {
        get { return result.RequestToken; }
        set { SetRequestToken(value); }
      }
      public Builder SetRequestToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestToken = true;
        result.requestToken_ = value;
        return this;
      }
      public Builder ClearRequestToken() {
        PrepareBuilder();
        result.hasRequestToken = false;
        result.requestToken_ = "";
        return this;
      }
      
      public bool HasClientIp {
        get { return result.hasClientIp; }
      }
      public string ClientIp {
        get { return result.ClientIp; }
        set { SetClientIp(value); }
      }
      public Builder SetClientIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientIp = true;
        result.clientIp_ = value;
        return this;
      }
      public Builder ClearClientIp() {
        PrepareBuilder();
        result.hasClientIp = false;
        result.clientIp_ = "";
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasSign {
        get { return result.hasSign; }
      }
      public string Sign {
        get { return result.Sign; }
        set { SetSign(value); }
      }
      public Builder SetSign(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSign = true;
        result.sign_ = value;
        return this;
      }
      public Builder ClearSign() {
        PrepareBuilder();
        result.hasSign = false;
        result.sign_ = "";
        return this;
      }
      
      public bool HasExt {
        get { return result.hasExt; }
      }
      public string Ext {
        get { return result.Ext; }
        set { SetExt(value); }
      }
      public Builder SetExt(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExt = true;
        result.ext_ = value;
        return this;
      }
      public Builder ClearExt() {
        PrepareBuilder();
        result.hasExt = false;
        result.ext_ = "";
        return this;
      }
    }
    static MessageHeaderInfo() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  public sealed partial class MessageHeaderResponse : pb::GeneratedMessageLite<MessageHeaderResponse, MessageHeaderResponse.Builder> {
    private MessageHeaderResponse() { }
    private static readonly MessageHeaderResponse defaultInstance = new MessageHeaderResponse().MakeReadOnly();
    private static readonly string[] _messageHeaderResponseFieldNames = new string[] { "error", "name", "requestToken" };
    private static readonly uint[] _messageHeaderResponseFieldTags = new uint[] { 8, 18, 26 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MessageHeaderResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MessageHeaderResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private int error_;
    public bool HasError {
      get { return hasError; }
    }
    public int Error {
      get { return error_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RequestTokenFieldNumber = 3;
    private bool hasRequestToken;
    private string requestToken_ = "";
    public bool HasRequestToken {
      get { return hasRequestToken; }
    }
    public string RequestToken {
      get { return requestToken_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messageHeaderResponseFieldNames;
      if (hasError) {
        output.WriteInt32(1, field_names[0], Error);
      }
      if (hasName) {
        output.WriteString(2, field_names[1], Name);
      }
      if (hasRequestToken) {
        output.WriteString(3, field_names[2], RequestToken);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasError) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Error);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasRequestToken) {
          size += pb::CodedOutputStream.ComputeStringSize(3, RequestToken);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasError) hash ^= error_.GetHashCode();
      if (hasName) hash ^= name_.GetHashCode();
      if (hasRequestToken) hash ^= requestToken_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MessageHeaderResponse other = obj as MessageHeaderResponse;
      if (other == null) return false;
      if (hasError != other.hasError || (hasError && !error_.Equals(other.error_))) return false;
      if (hasName != other.hasName || (hasName && !name_.Equals(other.name_))) return false;
      if (hasRequestToken != other.hasRequestToken || (hasRequestToken && !requestToken_.Equals(other.requestToken_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MessageHeaderResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MessageHeaderResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MessageHeaderResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MessageHeaderResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MessageHeaderResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MessageHeaderResponse result;
      
      private MessageHeaderResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MessageHeaderResponse original = result;
          result = new MessageHeaderResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MessageHeaderResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MessageHeaderResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.MessageHeaderResponse.DefaultInstance; }
      }
      
      public override MessageHeaderResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MessageHeaderResponse) {
          return MergeFrom((MessageHeaderResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageHeaderResponse other) {
        if (other == global::com.zyd.common.proto.client.MessageHeaderResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          Error = other.Error;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasRequestToken) {
          RequestToken = other.RequestToken;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageHeaderResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageHeaderResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasError = input.ReadInt32(ref result.error_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasRequestToken = input.ReadString(ref result.requestToken_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasError {
        get { return result.hasError; }
      }
      public int Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(int value) {
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasRequestToken {
        get { return result.hasRequestToken; }
      }
      public string RequestToken {
        get { return result.RequestToken; }
        set { SetRequestToken(value); }
      }
      public Builder SetRequestToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestToken = true;
        result.requestToken_ = value;
        return this;
      }
      public Builder ClearRequestToken() {
        PrepareBuilder();
        result.hasRequestToken = false;
        result.requestToken_ = "";
        return this;
      }
    }
    static MessageHeaderResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  public sealed partial class LoginRequest : pb::GeneratedMessageLite<LoginRequest, LoginRequest.Builder> {
    private LoginRequest() { }
    private static readonly LoginRequest defaultInstance = new LoginRequest().MakeReadOnly();
    private static readonly string[] _loginRequestFieldNames = new string[] { "userName" };
    private static readonly uint[] _loginRequestFieldTags = new uint[] { 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override LoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginRequestFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[0], UserName);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserName) hash ^= userName_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      LoginRequest other = obj as LoginRequest;
      if (other == null) return false;
      if (hasUserName != other.hasUserName || (hasUserName && !userName_.Equals(other.userName_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(LoginRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<LoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginRequest result;
      
      private LoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginRequest original = result;
          result = new LoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override LoginRequest DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.LoginRequest.DefaultInstance; }
      }
      
      public override LoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is LoginRequest) {
          return MergeFrom((LoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginRequest other) {
        if (other == global::com.zyd.common.proto.client.LoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
    }
    static LoginRequest() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  public sealed partial class LoginResponse : pb::GeneratedMessageLite<LoginResponse, LoginResponse.Builder> {
    private LoginResponse() { }
    private static readonly LoginResponse defaultInstance = new LoginResponse().MakeReadOnly();
    private static readonly string[] _loginResponseFieldNames = new string[] { "playerInfo", "sign" };
    private static readonly uint[] _loginResponseFieldTags = new uint[] { 10, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override LoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PlayerInfoFieldNumber = 1;
    private bool hasPlayerInfo;
    private global::com.zyd.common.proto.client.PlayerInfo playerInfo_;
    public bool HasPlayerInfo {
      get { return hasPlayerInfo; }
    }
    public global::com.zyd.common.proto.client.PlayerInfo PlayerInfo {
      get { return playerInfo_ ?? global::com.zyd.common.proto.client.PlayerInfo.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int SignFieldNumber = 2;
    private bool hasSign;
    private string sign_ = "";
    public bool HasSign {
      get { return hasSign; }
    }
    public string Sign {
      get { return sign_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginResponseFieldNames;
      if (hasPlayerInfo) {
        output.WriteMessage(1, field_names[0], PlayerInfo);
      }
      if (hasSign) {
        output.WriteString(2, field_names[1], Sign);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayerInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PlayerInfo);
        }
        if (hasSign) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Sign);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasPlayerInfo) hash ^= playerInfo_.GetHashCode();
      if (hasSign) hash ^= sign_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      LoginResponse other = obj as LoginResponse;
      if (other == null) return false;
      if (hasPlayerInfo != other.hasPlayerInfo || (hasPlayerInfo && !playerInfo_.Equals(other.playerInfo_))) return false;
      if (hasSign != other.hasSign || (hasSign && !sign_.Equals(other.sign_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(LoginResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<LoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginResponse result;
      
      private LoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginResponse original = result;
          result = new LoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override LoginResponse DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.LoginResponse.DefaultInstance; }
      }
      
      public override LoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is LoginResponse) {
          return MergeFrom((LoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginResponse other) {
        if (other == global::com.zyd.common.proto.client.LoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayerInfo) {
          MergePlayerInfo(other.PlayerInfo);
        }
        if (other.HasSign) {
          Sign = other.Sign;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.zyd.common.proto.client.PlayerInfo.Builder subBuilder = global::com.zyd.common.proto.client.PlayerInfo.CreateBuilder();
              if (result.hasPlayerInfo) {
                subBuilder.MergeFrom(PlayerInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PlayerInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasSign = input.ReadString(ref result.sign_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasPlayerInfo {
       get { return result.hasPlayerInfo; }
      }
      public global::com.zyd.common.proto.client.PlayerInfo PlayerInfo {
        get { return result.PlayerInfo; }
        set { SetPlayerInfo(value); }
      }
      public Builder SetPlayerInfo(global::com.zyd.common.proto.client.PlayerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayerInfo = true;
        result.playerInfo_ = value;
        return this;
      }
      public Builder SetPlayerInfo(global::com.zyd.common.proto.client.PlayerInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPlayerInfo = true;
        result.playerInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlayerInfo(global::com.zyd.common.proto.client.PlayerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPlayerInfo &&
            result.playerInfo_ != global::com.zyd.common.proto.client.PlayerInfo.DefaultInstance) {
            result.playerInfo_ = global::com.zyd.common.proto.client.PlayerInfo.CreateBuilder(result.playerInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.playerInfo_ = value;
        }
        result.hasPlayerInfo = true;
        return this;
      }
      public Builder ClearPlayerInfo() {
        PrepareBuilder();
        result.hasPlayerInfo = false;
        result.playerInfo_ = null;
        return this;
      }
      
      public bool HasSign {
        get { return result.hasSign; }
      }
      public string Sign {
        get { return result.Sign; }
        set { SetSign(value); }
      }
      public Builder SetSign(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSign = true;
        result.sign_ = value;
        return this;
      }
      public Builder ClearSign() {
        PrepareBuilder();
        result.hasSign = false;
        result.sign_ = "";
        return this;
      }
    }
    static LoginResponse() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  public sealed partial class PlayerInfo : pb::GeneratedMessageLite<PlayerInfo, PlayerInfo.Builder> {
    private PlayerInfo() { }
    private static readonly PlayerInfo defaultInstance = new PlayerInfo().MakeReadOnly();
    private static readonly string[] _playerInfoFieldNames = new string[] { "userId", "userName" };
    private static readonly uint[] _playerInfoFieldTags = new uint[] { 16, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override PlayerInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerInfoFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[1], UserName);
      }
      if (hasUserId) {
        output.WriteInt32(2, field_names[0], UserId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
        }
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, UserId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserName) hash ^= userName_.GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      PlayerInfo other = obj as PlayerInfo;
      if (other == null) return false;
      if (hasUserName != other.hasUserName || (hasUserName && !userName_.Equals(other.userName_))) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static PlayerInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(PlayerInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<PlayerInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerInfo result;
      
      private PlayerInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerInfo original = result;
          result = new PlayerInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override PlayerInfo DefaultInstanceForType {
        get { return global::com.zyd.common.proto.client.PlayerInfo.DefaultInstance; }
      }
      
      public override PlayerInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is PlayerInfo) {
          return MergeFrom((PlayerInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerInfo other) {
        if (other == global::com.zyd.common.proto.client.PlayerInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 16: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
    }
    static PlayerInfo() {
      object.ReferenceEquals(global::com.zyd.common.proto.client.ClientProtocol.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
#pragma warning restore
